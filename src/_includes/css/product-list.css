.product-materials-list {
	--flow-space: var(--space-xl);
	/* --grid-gap: var(--space-xl-m); */
	--grid-gap: var(--space-l-m);
}

.product-materials-list > li {
	--stack-gap: var(--gutter);
	--stack-vertical-alignment: space-between;
	background-color: var(--card-bg-color);
	border-radius: var(--space-2xs);

	position: relative;
	overflow: hidden;

	container-type: inline-size;
	transition: all 400ms ease;
}

/* if any card is hovered reduce the opacity of the others */
/* The primary input mechanism can conveniently hover over elements. */
/* @supports selector(:has(+ *)) {
	@media (hover: hover) {
		.product-materials-list > li {
			transition: all 300ms ease;
		}

		.product-materials-list:has(> li:hover) > li:not(:hover) {
			opacity: 0.5;
			filter: blur(1px);
		}
	}
} */

.product-materials-list .content {
	padding: var(--card-padding);
}

.product-materials-list h3 {
	--cluster-gap: var(--space-2xs);
}

.product-materials-list h3 span {
	position: relative;
}

.product-materials-list .pfas-free {
	block-size: 1em;
	inline-size: auto;
	vertical-align: middle;
	rotate: -1deg;
}

.product-materials-list .underline-illustration {
	position: absolute;
	inset-block-start: 100%;
	inset-inline-start: 0;
	inline-size: 100%;
	block-size: var(--space-3xs-2xs);
	z-index: -1;
}

.product-materials-list img {
	max-block-size: 360px;
	object-fit: cover;
	object-position: top;
	mix-blend-mode: darken;
}

/* duplicate each declaration in this rule 
in the support query below as well
because the media query range is not similar  */
@media (min-width: 70rem) {
	.product-materials-list img {
		position: absolute;
		inset-block-start: 0;
		inset-inline-end: 0;
		max-block-size: unset;
		block-size: 100%;
		object-position: bottom left;

		inline-size: 280px;
	}

	/* the CSS custom property is being set by JS  */
	/* Without JS, the declaration the resulting value would be invalid at computed value time (IACVT)  */
	.has-js .product-materials-list img {
		max-block-size: calc(var(--max-height) * 1px);
	}
}

/* same as the rule above */
@supports (max-width: 50cqw) {
	@container (min-width: 34rem) {
		.product-materials-list img {
			position: absolute;
			inset-block-start: 0;
			inset-inline-end: 0;
			max-block-size: unset;
			block-size: 100%;
			object-position: bottom left;

			inline-size: 50cqw;
		}

		/* the CSS custom property is being set by JS  */
		/* Without JS, the declaration the resulting value would be invalid at computed value time (IACVT)  */
		.has-js .product-materials-list img {
			max-block-size: calc(var(--max-height) * 1px);
		}
	}
}

.product-category-list {
	--flow-space: var(--space-xl-2xl);
}

/* @supports not selector(:has(+ *)) {
	.product-category-list {
		padding-inline-start: 1em;
	}
} */

/* .product-category-list > li {
	list-style-position: outside;
} */

.product-category-list > li {
	display: flex;
}

@supports selector(:has(+ *)) {
	.product-category-list li:has(> details) {
		/* to align the list items visually*/
		margin-inline-start: 0.25ch;
	}

	.product-category-list > li:not(:has(> details))::before {
		/* content: "→   "; */
		content: "";
		display: inline-block;
		inline-size: 1em;
		block-size: 1em;
		/* FIXME: hard coded a color value for the stroke */
		background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' class='percent-arrow-illustration animate' data-start='t' viewBox='0 0 57 108'%3E%3Cg style='fill:none;stroke:%23646866;stroke-linecap:round;stroke-miterlimit:10;stroke-width:16px'%3E%3Cpath d='M29.22 8.19c.41 20.93-2.42 62.37-3.07 91.68' class='percent-arrow-path arrow-body' pathLength='1'/%3E%3Cpath d='M26.15 99.87c-2.38-4.19-14.79-29.44-17.72-35.72' class='percent-arrow-path arrow-head-1' pathLength='1'/%3E%3Cpath d='M26.15 99.87c3.35-3.35 17.44-20.79 22.6-26.24' class='percent-arrow-path arrow-head-2' pathLength='1'/%3E%3C/g%3E%3C/svg%3E");
		background-repeat: no-repeat;
		rotate: -90deg;
		margin-inline-end: var(--space-2xs);
		vertical-align: top;
	}
}

.product-category-list li {
	--flow-space: 0.75em;
}

@supports (block-size: 1lh) {
	.product-category-list li {
		--flow-space: 0.5lh;
	}
}

/* FIXME: font-variation-settings might not work for all fonts */
.product-category-list summary {
	display: flex;
	align-items: baseline;
	max-inline-size: max-content;
	/* FIXME: magic number */
	gap: 0 var(--space-xs);
	list-style: none;
	cursor: pointer;
	border-radius: var(--space-4xs);
	outline: var(--outline-width) solid transparent;
	outline-offset: var(--outline-offset);
	transition: all 300ms ease;
}

.product-category-list summary:hover,
.product-category-list summary:focus-visible {
	color: var(--accent-dark);
	outline-color: var(--outline-color);
}

.product-category-list summary::before {
	/* content: "+"; */
	content: "▾";
	display: block;
	color: var(--accent);
	line-height: 1;
	/* transform: scale(1.4); */
	scale: 1.4;
	rotate: 0deg;
	/* transform-origin: right bottom; */
	font-family: var(--font-monospace);
	transition: rotate 400ms ease;
}

.product-category-list [open] summary::before {
	/* content: "—"; */
	rotate: 180deg;
}

/* Hide default marker */
.product-category-list summary::-webkit-details-marker,
.product-category-list summary::marker {
	content: "";
	display: none;
}

.product-subtype-list {
	margin-block-start: var(--flow-space);
}

.product-subtype-list,
.product-subtype-list li {
	--flow-space: 0.375em;
}

[open] .product-subtype-list {
	animation: appear 0.4s ease forwards;
	overflow: hidden;
}

@keyframes appear {
	0% {
		transform: translate(-0.5ch, 0);
		opacity: 0;
	}
	50% {
		opacity: 1;
	}
	100% {
		transform: translate(0, 0);
	}
}
